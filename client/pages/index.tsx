import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react'
import { io, Socket } from 'Socket.IO-client'

const inter = Inter({ subsets: ['latin'] })
let socket: Socket

type GameState = {
  description: string
  options: string[]
  image: string
}

export default function Home() {
  const [inputValue, setInputValue] = useState('')
  const [timeLeft, setTimeLeft] = useState(0)
  type VoteOptions = 'a' | 'b' | 'c'
  const [votes, setVotes] = useState<{ [key in VoteOptions]: number }>({
    a: 0,
    b: 0,
    c: 0,
  })

  const handlePromptSubmit = async () => {
    console.log('submitting :>> ', inputValue)
    socket.emit('newPlayerChoice', inputValue)
  }

  const fallbackImage = '/twitch-intro.png'
  const [currentGameState, setCurrentGameState] = useState<GameState>({
    description: 'Welcome to AI D&D',
    options: ['Sit back', 'Relax', 'Enjoy'],
    image: fallbackImage,
  })

  useEffect(() => {
    socket = io('http://localhost:5000')

    const onUpdateGameState = (newState: GameState) => {
      console.log('newState :>> ', newState)
      setCurrentGameState(newState)
    }

    const onUpdateTimeLeft = (newTimeLeft: number) => {
      console.log('newTimeLeft :>> ', newTimeLeft)
      setTimeLeft(newTimeLeft)
    }

    const onUpdateVotes = (newVotes: { [key in VoteOptions]: number }) => {
      console.log('newVotes :>> ', newVotes)
      setVotes(newVotes)
    }

    socket.on('updateGameState', onUpdateGameState)
    socket.on('updateTimeLeft', onUpdateTimeLeft)
    socket.on('updateVotes', onUpdateVotes)

    return () => {
      socket.off('updateGameState', onUpdateGameState)
      socket.off('updateTimeLeft', onUpdateTimeLeft)
      socket.off('updateVotes', onUpdateVotes)
    }
  }, [])

  const handleClick = async () => {
    const res = await fetch('http://localhost:5000', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ hello: 'world' }),
    })
    const jsonRes = await res.json()

    console.log('jsonRes :>> ', jsonRes)
  }

  const letters = ['a', 'b', 'c']

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.gameWindow}>
          <Image
            src={currentGameState.image || fallbackImage}
            alt="stable diffusion image"
            width={720}
            height={720}
            priority
          />
          <div className={styles.gameText}>
            <h1>{currentGameState.description}</h1>
            <ul>
              {currentGameState.options.map((option, index) => {
                const letter = letters[index] as VoteOptions
                const voteCount = votes[letter] || 0

                return (
                  <li key={index}>
                    <span className={styles.voteCount}>({voteCount})</span>
                    <span className={styles.voteLetter}>
                      {letters[index]}
                    </span>: {option}
                  </li>
                )
              })}
            </ul>
            <p>vote ends in: {timeLeft} seconds</p>
          </div>
        </div>

        <div>
          <button onClick={handleClick}>Start</button>
          {/* create input with react onchange etc, for text to enter prompt */}
          <input
            type="text"
            onChange={(e) => setInputValue(e.target.value)}
            value={inputValue}
          />
          <button onClick={handlePromptSubmit}>Submit</button>
        </div>
      </main>
    </>
  )
}
